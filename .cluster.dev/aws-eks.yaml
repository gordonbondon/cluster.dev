# # Defines if the cluster should be deployed or deleted, false would
# # delete the existing cluster.
# installed: true
installed: false

# Cluster name to be used across all resources.
name: dev-eks

provider:
  # Defines a cloud provider type.
  type: aws
  # Defines a cloud provider region, in which to create the cluster.
  region: eu-central-1

  # # Define networks and nodes location inside a single region.
  # # Minimum two zones should be defined. Cluster nodes could be spread
  # # across different datacenters. Multiple zones provide high
  # # availability, however, can lead to cost increase.
  # availability_zones:
  #   - eu-central-1b
  #   - eu-central-1c

  # # Virtual Private Cloud.
  # # `default` - use default one,
  # # `create` - installer creates a new VPC,
  # # `vpc_id` - define an already existent (in AWS tag the networks
  # # manually with the "cluster.dev/subnet_type" = "private/public"
  # # tags to make them usable).
  # vpc: default

  # # The CIDR block for the VPC. Cluster pods will use IPs from that pool.
  # # If you need peering between VPCs, their CIDRs should be unique.
  # vpc_cidr: 10.8.0.0/18

  # # To expose cluster resources, the DNS zone is required.
  # # If set to `cluster.dev`, the installer would create a zone
  # # `cluster-name-organization.cluster.dev` and point it to
  # # your cloud service NS'es. Alternate, you can set your own zone,
  # # which already exists in the target cloud.
  # domain: cluster.dev

  provisioner:
    # Provisioner to deploy the cluster with.
    type: eks
    # Kubernetes version.
    version: 1.16

    # # A list of additional security group IDs to include in worker
    # # launch config.
    # additional_security_group_ids: []

    node_group:
      # Name for Kubernetes group of worker nodes.
      - name: spot-group
        # Type for Kubernetes group of worker nodes.
        type: spot

        # # Size of a Kubernetes worker node.
        # instance_type: m5.large

        # # A list of override instance types for mixed instances policy.
        # for ex: override_instance_types: m5.large, m5a.large, c5.xlarge

        # # If 'lowest-price', the Auto Scaling group launches instances
        # # using the Spot pools with the lowest price, and evenly
        # # allocates your instances across the number of Spot pools.
        # # If 'capacity-optimized', the Auto Scaling group launches
        # # instances using Spot pools that are optimally chosen based on
        # # the available Spot capacity.
        # spot_allocation_strategy: lowest-price

        # # Number of Spot pools per availability zone to allocate capacity.
        # # EC2 Auto Scaling selects the cheapest Spot pools and evenly
        # # allocates Spot capacity across the number of Spot pools that
        # # you specify.
        # spot_instance_pools: 10

        # # Maximum price per unit hour that the user is willing to pay
        # # for the Spot instances. Default is the on-demand price.
        # spot_max_price: ""

        # # Absolute minimum amount of desired capacity that must be
        # # fulfilled by on-demand instances.
        # on_demand_base_capacity: 0

        # # Percentage split between on-demand and Spot instances above
        # # the base on-demand capacity.
        # on_demand_percentage_above_base_capacity: 0

        # # Desired worker capacity in the autoscaling group.
        # asg_desired_capacity: 1

        # # Minimum worker capacity in the autoscaling group.
        # asg_min_size: 1

        # Maximum worker capacity in the autoscaling group.
        asg_max_size: 1

        # Root volume size in GB in worker instances.
        root_volume_size: 50

        # This string is passed directly to kubelet, if set.
        # Useful for adding labels or taints.
        kubelet_extra_args: --node-labels=node.kubernetes.io/lifecycle=spot

        # Advanced parameters can be found here:
        # https://github.com/terraform-aws-modules/terraform-aws-eks/blob/v12.0.0/local.tf#L34-L95

      # Name for Kubernetes group of worker nodes.
      - name: on-demand-group
        # Size of a Kubernetes worker node.
        instance_type: t3.medium

        # # Desired worker capacity in the autoscaling group.
        # asg_desired_capacity: 1

        # # Minimum worker capacity in the autoscaling group.
        # asg_min_size: 1

        # Maximum worker capacity in the autoscaling group.
        asg_max_size: 1

        # Root volume size in GB in worker instances.
        root_volume_size: 20

        # This string is passed directly to kubelet, if set.
        # Useful for adding labels or taints.
        kubelet_extra_args: --node-labels=node.kubernetes.io/lifecycle=on-demand

        # Advanced parameters can be found here:
        # https://github.com/terraform-aws-modules/terraform-aws-eks/blob/v12.0.0/local.tf#L34-L95

# #
# # Deploy addons
# #
# addons:
#   # nginx-ingress - https://github.com/kubernetes/ingress-nginx
#   nginx-ingress: true
#   # cert-manager - https://cert-manager.io/
#   cert-manager: true
#   # external-dns - https://github.com/kubernetes-sigs/external-dns/
#   external-dns: true
#   # Argo CD - https://argoproj.github.io/argo-cd/
#   argo-cd: true
#   # Operator Lifecycle Manager - https://github.com/operator-framework/operator-lifecycle-manager
#   olm: true
#   # Keycloak Operator - https://github.com/keycloak/keycloak-operator
#   keycloak: true

#
# Path to apps that will be managed in GitOps way with ArgoCD.
#
apps:
  - /kubernetes/apps/samples
